Principles of Reproducible Research
========================================================
author: Patrick Mathias & Randy Julian
date: September 9, 2018
autosize: true

What is reproducible research?
========================================================

Reproducible research = any research result can be reproduced by anybody

Reproducibility can be achieved when the following criteria are met [(Marecelino 2016)](https://www.r-bloggers.com/what-is-reproducible-research/):
- All methods are fully reported
- All data and files used for the analysis are available
- The process of analyzing raw data is well reported and preserved

Why should I care about reproducibility?
========================================================

- Someone else may need to run your analysis
- You will want to run the same exact analysis or a very similar analysis in the future
- You may want to improve on that analysis

**"Everything you do, you will probably have to do over again."** [(Noble 2009)](http://journals.plos.org/ploscompbiol/article?id=10.1371/journal.pcbi.1000424)

Reproducbility practices discussed in this course
========================================================

- Develop a standardized but easy-to-use project structure
- Adopt a style convention for coding
- Enforce reproducibility when working with projects and packages
- Use a version control system

Great resource: "Good enough practices in scientific computing" [(Wilson 2017)](http://journals.plos.org/ploscompbiol/article?id=10.1371/journal.pcbi.1005510)

Develop a standard project structure
========================================================

- **Put each project in its own directory, which is named after the project**
- Put text documents associated with the project in the doc directory
- **Put raw data and metadata in a data directory and files generated during cleanup and analysis in a results directory**
- Put project source code in the src directory
- Put compiled programs in the bin directory
- **Name all files to reflect their content or function**

Exercise 1: Refresher on navigating file structure in R
========================================================
1. Navigate to "Global Options" under the Tools menu in the RStudio application and note the *Default working directory (when not in a project)*
2. Navigate to your Console and get the working directory using `getwd()`
3. Review the contents of your current folder using `list.files()`
4. Now try to set your working directory using `setwd("test_dir")`. What happened?
5. Create a new test directory using `dir.create("test_dir")`
6. Review your current directory
7. Set your directory to the test directory you just created

Exercise 1: Refresher on navigating file structure in R
========================================================
8. Using the Files window (bottom right in RStudio, click on **Files** tab if on another tab), navigate to the test directory you just created and list the files. *Pro tip: The More menu here has shortcuts to set the currently displayed directory as your working directory and to navigate to the current working directory*
9. Navigate back to one level above the directory you created using `setwd("..")` and list the files
10. Delete the directory you created using the `unlink()` function. Learn more about how to use the function by reviewing the documentation: `?unlink`. Pay special attention to comments about deleting directories.

Exercise 1 Comments
========================================================

- Be aware of your working directory: `getwd()` 
- Set it when needed: `setwd()`
- Directories created and removed with `dir.create()` and `unlink()`, respectively
- Create a projects directory to house projects

Exercise 2: Create a project using RStudio
========================================================
1. Navigate to the **File** menu and select **New Project...** OR Select the **Create a project** button on the global toolbar (2nd from the left)
2. Select **New Directory** option
3. In the Project Type prompt, select **New Project**
4. In the Directory Name prompt under Create New Project, enter "sample-project-structure"
5. In the Create Project as a Subdirectory of prompt under Create New Project, navigate to the Projects folder you just created (or another directory of your choosing). You can type in the path or hit the **Browse** button to find the directory. Check the option for "Open in a new session" and create your project.

Exercise 2 Comments
========================================================

- RStudio projects can be easily closed and re-opened, preserving your work at a given time
- RStudio projects can also help with directory organization
  - Working dir = project dir (unless otherwise explicitly specified)
  
Create a data directory and a results directory
========================================================

- Using programming languages (as opposed to Excel) can help separate analysis from data
  - Cannot trace what happened to data if overwritten during analysis
- Raw data in **data** directory
- Results from analysis in **results** or **output** directory
- May want to separate out source code (**src** directory), figures, and documents (eg. manuscripts) as well

Exercise 3: Create a minimal project structure
========================================================

Use `dir.create()` to create a project structure

- Can convert code into a function that will build project structure for you [Refresher on writing functions](https://swcarpentry.github.io/r-novice-inflammation/02-func-R/)
- Alternately, use an existing package to create your project structure: eg. [Project Template](http://projecttemplate.net/index.html)